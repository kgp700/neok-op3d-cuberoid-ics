#ifndef __OMAP_SERIAL_H__#define __OMAP_SERIAL_H__#include <linux/serial_core.h>#include <linux/platform_device.h>#include <plat/control.h>#include <plat/mux.h>#define DRIVER_NAME	"omap-hsuart"#define OMAP_SERIAL_NAME	"ttyO"#define OMAP_MDR1_DISABLE	0x07#define OMAP_MDR1_MODE13X	0x03#define OMAP_MDR1_MODE16X	0x00#define OMAP_MODE13X_SPEED	230400#define DMA_FOR_UART2#ifdef DMA_FOR_UART2 #define UART_MDR3		0x20#define SET_DMA_TX_THRESHOLD	0x04#define UART_TX_DMA_THRESHOLD	0x21#define TX_FIFO_THR_LVL	0x3E#endif#define UART_MDR3		0x20#define SET_DMA_TX_THRESHOLD	0x04#define UART_TX_DMA_THRESHOLD	0x21#define TX_FIFO_THR_LVL	0x3E#define OMAP_UART_LCR_CONF_MDB	0xBF#define OMAP_UART_LCR_CONF_MOPER 0x00#define OMAP_UART_LCR_CONF_MDA  0x80#define OMAP_UART_WER_MOD_WKUP	0X7F#define OMAP_UART_SW_TX		0x04#define OMAP_UART_SW_RX		0x04#define OMAP_UART_SYSC_RESET	0X07#define OMAP_UART_TCR_TRIG	0X0F#define OMAP_UART_SW_CLR	0XF0#define OMAP_UART_FIFO_CLR	0X06#define OMAP_UART_DMA_CH_FREE	-1#define RX_TIMEOUT		(3 * HZ)#define OMAP_MAX_HSUART_PORTS	4#define UART1                  (0x0)#define UART2                  (0x1)#define UART3                  (0x2)#define UART4                  (0x3)#define MSR_SAVE_FLAGS		UART_MSR_ANY_DELTAstruct omap_uart_port_info {	unsigned long		reserved1;		void __iomem		*membase;		resource_size_t		mapbase;		unsigned int		reserved2;		unsigned long		irqflags;		unsigned int		uartclk;		void			*reserved3;		unsigned char		regshift;		unsigned char		reserved4;		unsigned char		reserved5;		upf_t			flags;					int                     use_dma;        	int                     dma_rx_buf_size;	int                     dma_rx_timeout; 	unsigned int            idle_timeout;   #ifdef DMA_FOR_UART2	u8			omap4_tx_threshold;#endif};struct uart_omap_dma {	u8			uart_dma_tx;	u8			uart_dma_rx;	int			rx_dma_channel;	int			tx_dma_channel;	dma_addr_t		rx_buf_dma_phys;	dma_addr_t		tx_buf_dma_phys;	unsigned int		uart_base;		unsigned char		*rx_buf;	unsigned int		prev_rx_dma_pos;	int			tx_buf_size;	int			tx_dma_used;	int			rx_dma_used;	spinlock_t		tx_lock;	spinlock_t		rx_lock;		struct timer_list	rx_timer;	int			rx_buf_size;	int			rx_timeout;#ifdef DMA_FOR_UART2	u8			tx_threshold;#endif};struct uart_omap_port {	struct uart_port	port;	struct uart_omap_dma	uart_dma;	struct platform_device	*pdev;	unsigned char		ier;	unsigned char		lcr;	unsigned char		mcr;	unsigned char		fcr;	unsigned char		efr;	int			use_dma;		unsigned int		lsr_break_flag;	unsigned char		msr_saved_flags;	char			name[20];	unsigned long		port_activity;};int omap_uart_active(int num);#ifdef CONFIG_PMvoid omap_uart_enable_clock_from_irq(int uart_num);void omap_uart_mdr1_errataset(int uart_no, u8 mdr1_val, u8 fcr_val);#endif#endif 